#!/usr/bin/env ruby

require "pathname"

$LOAD_PATH << Pathname(__dir__).parent + "lib"

require "bugsnag"
require "runners"
require "runners/cli"

class RunnersTimeoutError < StandardError; end

EXIT_STATUS_FOR_SIGTERM = 126

# @see https://docs.bugsnag.com/platforms/ruby/rails/configuration-options
Bugsnag.configure do |config|
  config.app_version = ENV["RUNNERS_VERSION"]
  config.release_stage = ENV["BUGSNAG_RELEASE_STAGE"]
end

# @see https://docs.bugsnag.com/platforms/ruby/customizing-error-reports/#adding-callbacks
Bugsnag.before_notify_callbacks << ->(report) {
  report.add_tab(:task_guid, ENV["TASK_GUID"]) if ENV["TASK_GUID"]
  report.add_tab(:arguments, ARGV)
}

trap('SIGTERM') do
  Bugsnag.notify(RunnersTimeoutError.new)
  exit(EXIT_STATUS_FOR_SIGTERM)
end

trap('SIGUSR2') do
  Bugsnag.notify(RunnersTimeoutError.new)
end

result = Runners::CLI.new(argv: ARGV.dup, stdout: STDOUT, stderr: STDERR).validate_options!.run
if result.instance_of?(Runners::Results::Error)
  Bugsnag.notify(result.exception)
end
