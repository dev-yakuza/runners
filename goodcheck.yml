rules:
  - id: sider.runners.docker.copy-require-chown
    pattern: /COPY (?!--chown=)/
    glob: "images/**/Dockerfile*.erb"
    message: |
      How about adding `--chown` to this `COPY` instruction?

      The owner of files copied by the `COPY` instruction is the *root* user.
      In the most cases, this behavior may be unexpected.

      See https://docs.docker.com/engine/reference/builder/#copy
    justification:
      - When needing the *root* user.
    fail: |
      COPY a_file dest/
    pass: |
      COPY --chown=<%= chown %> a_file dest/

  - id: sider.runners.ruby.disallow-standard-error
    pattern:
      - token: StandardError
    glob: lib/runners/**/*.rb
    message: |
      Disallow `StandardError`. Use `Runners::UserError` or `Runners::SystemError` instead.
    justification:
      - When there is an unavoidable reason to use `StandardError`.
    fail: |
      class FooError < StandardError; end
    pass: |
      class FooError < UserError; end

  - id: sider.runners.trace_writer.masked_string
    glob: lib/runners/trace_writer.rb
    message: |
      Use `filter.mask(...)` if the passed string has possibly sensitive values
    justification:
      - When the passed value is not sensitive
      - When your change is irrelevant to `:writer`

  - id: sider.runners.root_user_in_dockerfile
    pattern: "USER root"
    glob: images/**/Dockerfile
    message: |
      Try to avoid using the `root` user as much as possible.

      Each runner is executed by the non-root user for security reasons.
      Using the `USER` command leads to more layers and bigger image size.
    justification:
      - When you need to use system-wide commands such as `apt-get`.

  - id: sider.runners.use_exact_version_in_package_json
    pattern: "^"
    glob: images/**/package.json
    message: |
      Use the exact version format `x.y.z` instead of `^x.y.z`.

      A package's version with `^x.y.z` is changeable at runtime (e.g. `npm install`).
      Such an inaccurate version may makes our debugging hard.

  - id: sider.runners.time_iso8601
    pattern: iso8601
    glob: lib/**/*.rb
    message: |
      Consider adding `fraction_digits` to when using `Time#iso8601`.

      In most cases, milliseconds are necessary. For example:

      ```ruby
      Time.now.iso8601    #=> "2021-01-08T11:35:05+09:00"
      Time.now.iso8601(3) #=> "2021-01-08T11:35:05.371+09:00"
      ```

      See also <https://ruby-doc.org/stdlib-2.7.2/libdoc/time/rdoc/Time.html#method-i-iso8601>.
    justification:
      - When `fraction_digits` is given already.
      - When milliseconds are never necessary.

  - id: sider.runners.pmd_dist
    pattern: pmd-dist
    glob: images/**/build.gradle
    message: |
      Check if other `pmd-*` packages have the same version with `pmd-cpd`.
    justification:
      - When all `pmd-*` packages have the same version.

import:
  - https://github.com/sider/goodcheck-rules/archive/refs/tags/v0.0.1.tar.gz

exclude:
  - "**/package-lock.json"
  - "**/yarn.lock"

exclude_binary: true
