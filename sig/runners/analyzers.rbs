module Runners
  class Analyzers
    type analyzer = Hash[Symbol, String | bool | nil]
    type analyzer_id = Symbol | String

    extend Forwardable

    @content: Hash[Symbol, analyzer]

    def each: () { ([Symbol, analyzer]) -> void } -> self
            | () -> Enumerator[[Symbol, analyzer], self]

    def map: [T] () { ([Symbol, analyzer]) -> T } -> Array[T]

    def size: () -> Integer

    def name: (analyzer_id) -> String

    def github: (analyzer_id) -> String

    def doc: (analyzer_id) -> String

    def website: (analyzer_id) -> String?

    def docker: (analyzer_id) -> String

    def deprecated?: (analyzer_id) -> bool

    def beta?: (analyzer_id) -> bool

    private

    def analyzer: (analyzer_id) -> analyzer
  end
end
