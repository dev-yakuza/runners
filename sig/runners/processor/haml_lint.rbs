module Runners
  class Processor::HamlLint < Processor
    include Ruby

    class SchemaClass < StrongJSON
      def runner_config: () -> StrongJSON::Type::Object[untyped]
      def issue: () -> StrongJSON::Type::Object[untyped]
    end
    Schema: SchemaClass

    OPTIONAL_GEMS: Array[Ruby::GemInstaller::Spec]
    DEFAULT_GEMS: Array[String]
    GEM_NAME: String
    REQUIRED_GEM_NAMES: Array[String]
    CONSTRAINTS: Ruby::constraints
    DEFAULT_TARGET: String
    DEFAULT_RUBOCOP_CONFIG: String

    private

    def setup_default_rubocop_config: () -> String?

    def target: () -> Array[String]

    def include_linter: () -> Array[String]

    def exclude_linter: () -> Array[String]

    def exclude: () -> Array[String]

    def haml_lint_config: () -> Array[String]

    def config_parallel: () -> Array[String]

    def parse_result: (String) -> Array[Issue]

    def build_links: (untyped issue_id) -> (::Array[untyped] | ::Array[::String])

    def run_analyzer: () -> untyped

    # NOTE: HAML-Lint exits successfully even if RuboCop fails.
    #       The version 0.35.0 fixed the issue, but we continue to support older versions.
    #
    # @see https://github.com/sds/haml-lint/issues/317
    def add_rubocop_warnings_if_exists: (untyped stderr) -> untyped
  end
end
