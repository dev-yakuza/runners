module Runners
  class Processor::MetricsFileInfo < Processor
    class SchemaClass < StrongJSON
      include Schema::ConfigTypes

      def config: () -> StrongJSON::Type::Object[untyped]
      def issue: () -> StrongJSON::Type::Object[untyped]
    end
    SCHEMA: SchemaClass

    CHURN_PERIOD_IN_DAYS: Integer

    CHURN_COMMIT_COUNT: Integer

    private

    def generate_issue: (Pathname, Integer)-> Issue

    def lines_of_code: () -> Hash[Pathname, Integer]

    def analyze_lines_of_code: (Array[Pathname]) -> void

    def last_committed_at: () -> Hash[Pathname, String]

    def analyze_last_committed_at: (Array[Pathname]) -> void

    def code_churn: () -> Hash[Pathname, Hash[Symbol, Integer]]

    def analyze_code_churn: () -> Integer

    def calc_churn: (Hash[Symbol, Integer], String, String) -> Hash[Symbol, Integer]

    type commit_summary = {
      count: Integer,
      latest_sha: String,
      latest_time: Time,
      oldest_sha: String,
      oldest_time: Time,
    }

    def commit_summary_within: (*String) -> commit_summary

    def extract_text_files: (Array[Pathname]) -> Set[Pathname]

    def git: (*Shell::command_argument) -> [String, String]
  end
end
