module Runners
  module Ruby
    class GemInstaller
      type git_source = {
        repo: String,
        ref: String?,
        branch: String?,
        tag: String?
      }

      type gems_item = {
        name: String,
        version: String?,
        source: String?,
        git: git_source?
      }

      class InstallationFailure < InstallGemsFailure
      end

      attr_reader gem_home: Pathname
      attr_reader specs: Array[Spec]
      attr_reader trace_writer: TraceWriter
      attr_reader shell: Shell
      attr_reader constraints: constraints
      attr_reader config_path_name: String
      attr_reader use_local: bool

      def initialize: (shell: Shell,
                       home: Pathname,
                       config_path_name: String,
                       specs: Array[Spec],
                       constraints: constraints,
                       trace_writer: TraceWriter,
                       use_local: bool) -> void

      def gemfile_path: () -> Pathname

      def lockfile_path: () -> Pathname

      def install!: [X] () { (Hash[String, String]) -> X } -> X

      def gemfile_content: () -> String

      private

      def group_specs: () -> Array[[Source, Array[Spec]]]

      def gem: (Spec, Gem::Requirement) -> String

      def gem_constraints: (Spec, Source) -> Gem::Requirement
    end
  end
end
