module Runners
  class Warnings
    type warning = { message: String, file: String? }

    attr_reader trace_writer: TraceWriter?

    def initialize: (?trace_writer: TraceWriter?) -> void

    def add: (String, ?file: String?, ?limit: Integer) -> void

    def add_warning_if_deprecated_version: (String, current: String, minimum: String, ?deadline: Time?) -> void

    def add_warning_for_deprecated_linter: (old: String, new: String, ?links: Array[String], ?deadline: Time?) -> void

    def size: () -> Integer

    def empty?: () -> bool

    def each: () { (warning) -> void } -> void

    def to_a: () -> Array[warning]
    alias as_json to_a

    private

    def deadline_text: (Time?) -> String

    def truncate_message: (String, Integer) -> String
  end
end
